{"ast":null,"code":"var _jsxFileName = \"D:\\\\2077\\\\ForMerging-master\\\\ForMerging\\\\src\\\\components\\\\admin\\\\tariffs\\\\index.js\";\nimport React, { Component } from 'react';\nimport FormField from '../../ui/formFields';\nimport { withRouter } from 'react-router-dom';\nimport AdminLayout from '../../../HOC/AdminLayout';\nimport { firebaseDB, firebaseTariffs } from '../../../firebase';\nimport { validate } from \"../../ui/misc\";\n\nclass AdminTariff extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tariffId: '',\n      formType: '',\n      formError: false,\n      formSuccess: '',\n      formdata: {\n        persons: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'persons_input',\n            type: 'text',\n            label: 'No of person',\n            className: 'form-control',\n            placeholder: 'eg. 2p X'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          validationMessage: '',\n          showlabel: true\n        },\n        ep: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'ep_input',\n            type: 'text',\n            label: 'Price for EP',\n            className: 'form-control',\n            placeholder: 'eg. Rs 4000'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          validationMessage: '',\n          showlabel: true\n        },\n        bb: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'bb_input',\n            type: 'text',\n            label: 'Price for B&B',\n            className: 'form-control',\n            placeholder: 'eg. Rs 4000'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          validationMessage: '',\n          showlabel: true\n        },\n        map: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'map_input',\n            type: 'text',\n            label: 'Price for MAP',\n            className: 'form-control',\n            placeholder: 'eg. Rs 4000'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          validationMessage: '',\n          showlabel: true\n        }\n      }\n    };\n\n    this.successForm = message => {\n      this.setState({\n        formSuccess: message\n      });\n      setTimeout(() => {\n        this.setState({\n          formSuccess: ''\n        });\n      }, 2000);\n    };\n  }\n\n  updateFields(tariff, tariffId, type) {\n    const newFormData = { ...this.state.formdata\n    };\n\n    for (let key in newFormData) {\n      newFormData[key].value = tariff[key];\n      newFormData[key].valid = true;\n    }\n\n    this.setState({\n      tariffId,\n      formType: type,\n      formdata: newFormData\n    });\n  }\n\n  componentDidMount() {\n    const tariffId = this.props.match.params.id;\n\n    if (tariffId) {\n      firebaseDB.ref(`tariffs/${tariffId}`).once('value').then(snapshot => {\n        const tariff = snapshot.val();\n        this.updateFields(tariff, tariffId, 'Edit Tariff');\n      });\n    } else {\n      this.setState({\n        formType: 'Add Tariff'\n      });\n    }\n  }\n\n  updateForm(element, content = \"\") {\n    //not good to mutate the state so copy the state and work on this\n    const newFormData = { ...this.state.formdata\n    };\n    const newElement = { ...newFormData[element.id]\n    };\n\n    if (content === '') {\n      newElement.value = element.event.target.value;\n    } else {\n      newElement.value = content;\n    }\n\n    let validData = validate(newElement);\n    newElement.valid = validData[0];\n    newElement.validationMessage = validData[1];\n    newFormData[element.id] = newElement;\n    this.setState({\n      formError: false,\n      formdata: newFormData\n    });\n  }\n\n  submitForm(event) {\n    event.preventDefault();\n    let dataToSubmit = {};\n    let formIsValid = true;\n\n    for (let key in this.state.formdata) {\n      dataToSubmit[key] = this.state.formdata[key].value; //as formisValid is changing for each element\n\n      formIsValid = this.state.formdata[key].valid && formIsValid;\n    }\n\n    if (formIsValid) {\n      if (this.state.formType === 'Edit Tariff') {\n        firebaseDB.ref(`tariffs/${this.state.tariffId}`).update(dataToSubmit).then(() => {\n          this.successForm('Updated Successfully');\n        }).catch(e => {\n          this.setState({\n            formError: true\n          });\n          console.log('erroe', e);\n        });\n      } else {\n        firebaseTariffs.push(dataToSubmit).then(() => {\n          this.successForm('Added Successfully');\n        }).catch(error => {\n          console.log('Error occured', error);\n          this.setState({\n            formError: true\n          });\n        });\n      }\n    } else {\n      this.setState({\n        formError: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AdminLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container tariff-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tariff-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, this.state.formType), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this.submitForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: 'persons',\n      formData: this.state.formdata.persons,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'ep',\n      formData: this.state.formdata.ep,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'bb',\n      formData: this.state.formdata.bb,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'map',\n      formData: this.state.formdata.map,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"success_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 37\n      }\n    }, this.state.formSuccess), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 37\n      }\n    }, \"Something is wrong\") : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 41\n      }\n    }, this.state.formType)))))));\n  }\n\n}\n\nexport default withRouter(AdminTariff);","map":{"version":3,"sources":["D:/2077/ForMerging-master/ForMerging/src/components/admin/tariffs/index.js"],"names":["React","Component","FormField","withRouter","AdminLayout","firebaseDB","firebaseTariffs","validate","AdminTariff","state","tariffId","formType","formError","formSuccess","formdata","persons","element","value","config","name","type","label","className","placeholder","validation","required","valid","validationMessage","showlabel","ep","bb","map","successForm","message","setState","setTimeout","updateFields","tariff","newFormData","key","componentDidMount","props","match","params","id","ref","once","then","snapshot","val","updateForm","content","newElement","event","target","validData","submitForm","preventDefault","dataToSubmit","formIsValid","update","catch","e","console","log","push","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport FormField from '../../ui/formFields';\r\nimport {withRouter} from 'react-router-dom';\r\nimport AdminLayout from '../../../HOC/AdminLayout'\r\nimport { firebaseDB, firebaseTariffs } from '../../../firebase';\r\nimport { validate } from \"../../ui/misc\";\r\n\r\nclass AdminTariff extends Component {\r\n\r\n    state = {\r\n        tariffId : '',\r\n        formType: '',\r\n        formError: false,\r\n        formSuccess: '',\r\n        formdata: {\r\n            persons:{\r\n                element:'input',\r\n                value:'',\r\n                config:{\r\n                    name:'persons_input',\r\n                    type:'text',\r\n                    label: 'No of person',\r\n                    className: 'form-control',\r\n                    placeholder: 'eg. 2p X'\r\n                },\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                validationMessage:'',\r\n                showlabel: true\r\n            },\r\n            ep:{\r\n                element:'input',\r\n                value:'',\r\n                config:{\r\n                    name:'ep_input',\r\n                    type:'text',\r\n                    label: 'Price for EP',\r\n                    className: 'form-control',\r\n                    placeholder: 'eg. Rs 4000'\r\n                },\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                validationMessage:'',\r\n                showlabel: true\r\n            },\r\n            bb:{\r\n                element:'input',\r\n                value:'',\r\n                config:{\r\n                    name:'bb_input',\r\n                    type:'text',\r\n                    label: 'Price for B&B',\r\n                    className: 'form-control',\r\n                    placeholder: 'eg. Rs 4000'\r\n                },\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                validationMessage:'',\r\n                showlabel: true\r\n            },\r\n            map:{\r\n                element:'input',\r\n                value:'',\r\n                config:{\r\n                    name:'map_input',\r\n                    type:'text',\r\n                    label: 'Price for MAP',\r\n                    className: 'form-control',\r\n                    placeholder: 'eg. Rs 4000'\r\n                },\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                validationMessage:'',\r\n                showlabel: true\r\n            },\r\n        }\r\n    }\r\n\r\n    updateFields(tariff, tariffId, type){\r\n        const newFormData = {...this.state.formdata}\r\n        for(let key in newFormData){\r\n            newFormData[key].value = tariff[key];\r\n            newFormData[key].valid = true;\r\n        }\r\n        this.setState({\r\n            tariffId,\r\n            formType: type,\r\n            formdata: newFormData\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        const tariffId = this.props.match.params.id;\r\n        if(tariffId){\r\n            firebaseDB.ref(`tariffs/${tariffId}`).once('value')\r\n            .then((snapshot) => {\r\n                const tariff = snapshot.val();\r\n                this.updateFields(tariff, tariffId, 'Edit Tariff')\r\n            })\r\n        }else{\r\n            this.setState({\r\n                formType: 'Add Tariff'\r\n            })\r\n        }\r\n    }\r\n\r\n    updateForm(element, content=\"\"){\r\n        //not good to mutate the state so copy the state and work on this\r\n        const newFormData = { ...this.state.formdata};\r\n        const newElement = {...newFormData[element.id]}\r\n        if(content === ''){\r\n            newElement.value = element.event.target.value;\r\n        }else{\r\n            newElement.value = content;\r\n        }\r\n        let validData = validate(newElement)\r\n        newElement.valid = validData[0];\r\n        newElement.validationMessage = validData[1]\r\n        newFormData[element.id] = newElement;\r\n        this.setState({\r\n            formError: false,\r\n            formdata: newFormData\r\n        })\r\n    }\r\n\r\n    submitForm(event){\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let formIsValid = true;\r\n\r\n        for(let key in this.state.formdata){\r\n            dataToSubmit[key] = this.state.formdata[key].value;\r\n            //as formisValid is changing for each element\r\n            formIsValid = this.state.formdata[key].valid && formIsValid;\r\n        }\r\n\r\n        if(formIsValid){\r\n            if(this.state.formType === 'Edit Tariff'){\r\n                firebaseDB.ref(`tariffs/${this.state.tariffId}`)\r\n                .update(dataToSubmit).then(()=>{\r\n                    this.successForm('Updated Successfully')\r\n                }).catch((e)=>{\r\n                    this.setState({formError: true})\r\n                    console.log('erroe', e)\r\n                })\r\n            }else{\r\n                firebaseTariffs.push(dataToSubmit).then(()=>{\r\n                    this.successForm('Added Successfully');\r\n                }).catch((error)=>{\r\n                    console.log('Error occured', error);\r\n                    this.setState({formError: true})\r\n                })\r\n            }\r\n        }else{\r\n            this.setState({\r\n                formError: true\r\n            })\r\n        }\r\n    }\r\n\r\n    successForm = (message) => {\r\n        this.setState({\r\n            formSuccess: message\r\n        })\r\n        setTimeout(()=>{\r\n            this.setState({formSuccess: ''})\r\n        }, 2000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AdminLayout>\r\n                <div className=\"container tariff-container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"tariff-form\">\r\n                            <h2>\r\n                                {this.state.formType}\r\n                            </h2>\r\n                            <form onSubmit={(e) => this.submitForm()}>\r\n                                    <FormField \r\n                                        id={'persons'}\r\n                                        formData = {this.state.formdata.persons}\r\n                                        change={(element)=>this.updateForm(element)}\r\n                                    />\r\n                                    <FormField \r\n                                        id={'ep'}\r\n                                        formData = {this.state.formdata.ep}\r\n                                        change={(element)=>this.updateForm(element)}\r\n                                    />\r\n                                    <FormField \r\n                                        id={'bb'}\r\n                                        formData = {this.state.formdata.bb}\r\n                                        change={(element)=>this.updateForm(element)}\r\n                                    />\r\n                                    <FormField \r\n                                        id={'map'}\r\n                                        formData = {this.state.formdata.map}\r\n                                        change={(element)=>this.updateForm(element)}\r\n                                    />\r\n\r\n                                    <div className=\"success_label\">{this.state.formSuccess}</div>\r\n                                    {this.state.formError ? \r\n                                    <div className=\"error_label\">\r\n                                        Something is wrong\r\n                                    </div>\r\n                                    :null}\r\n                                    <div className=\"admin_submit\">\r\n                                        <button className=\"btn btn-secondary\" onClick={(event)=>this.submitForm(event)}>\r\n                                            {this.state.formType}\r\n                                        </button>\r\n                                    </div>\r\n                            </form>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AdminTariff);"]},"metadata":{},"sourceType":"module"}