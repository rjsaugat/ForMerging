{"ast":null,"code":"var _jsxFileName = \"D:\\\\2077\\\\ForMerging-master\\\\ForMerging\\\\src\\\\components\\\\ui\\\\fileUploader.js\";\nimport React, { Component } from 'react';\nimport { firebase } from '../../firebase';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileUploader from 'react-firebase-file-uploader';\n\nclass Fileuploader extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      isUploading: false,\n      fileURL: ''\n    };\n\n    this.handleUploadStart = () => {\n      this.setState({\n        isUploading: true\n      });\n    };\n\n    this.handleUploadError = () => {\n      this.setState({\n        isUploading: false\n      });\n      console.log('file uploading error occured');\n    };\n\n    this.handleUploadSuccess = filename => {\n      this.setState({\n        name: filename,\n        isUploading: false\n      });\n      firebase.storage().ref(this.props.dir).child(filename).getDownloadURL().then(url => {\n        console.log(url);\n        this.setState({\n          fileURL: url\n        });\n      });\n      this.props.filename(filename);\n    };\n\n    this.uploadAgain = () => {\n      //we can pass the filename and delete from the storage but we gonna reset state\n      this.setState({\n        name: '',\n        isUploading: false,\n        fileURL: ''\n      });\n      this.props.resetImage();\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.defaultImg) {\n      return state = {\n        name: props.defaultImgName,\n        fileURL: props.defaultImg\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, !this.state.fileURL ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label_inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, this.props.tag), /*#__PURE__*/React.createElement(FileUploader, {\n      accept: \"image/*\",\n      name: \"image\",\n      randomizeFilename: true,\n      storageRef: firebase.storage().ref(this.props.dir),\n      onUploadStart: this.handleUploadStart,\n      onUploadError: this.handleUploadError,\n      onUploadSuccess: this.handleUploadSuccess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    })) : null, this.state.isUploading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        textAlign: 'center',\n        margin: '30px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      style: {\n        color: '#3da066'\n      },\n      thickness: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    })) : null, this.state.fileURL ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image_upload_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: '100%'\n      },\n      src: this.state.fileURL,\n      alt: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"remove\",\n      onClick: () => this.uploadAgain(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \"Remove\")) : null);\n  }\n\n}\n\nexport default Fileuploader;","map":{"version":3,"sources":["D:/2077/ForMerging-master/ForMerging/src/components/ui/fileUploader.js"],"names":["React","Component","firebase","CircularProgress","FileUploader","Fileuploader","state","name","isUploading","fileURL","handleUploadStart","setState","handleUploadError","console","log","handleUploadSuccess","filename","storage","ref","props","dir","child","getDownloadURL","then","url","uploadAgain","resetImage","getDerivedStateFromProps","defaultImg","defaultImgName","render","tag","textAlign","margin","color","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { firebase } from '../../firebase';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport FileUploader from 'react-firebase-file-uploader';\r\n\r\nclass Fileuploader extends Component {\r\n    \r\n    state = {\r\n        name: '',\r\n        isUploading: false,\r\n        fileURL: ''\r\n    }\r\n\r\n    handleUploadStart = () => {\r\n        this.setState({\r\n            isUploading:true\r\n        })\r\n    }\r\n\r\n    handleUploadError = () => {\r\n        this.setState({\r\n            isUploading: false\r\n        })\r\n        console.log('file uploading error occured')\r\n    }\r\n\r\n    handleUploadSuccess = (filename) => {\r\n        this.setState({\r\n            name: filename,\r\n            isUploading: false\r\n        })\r\n        firebase.storage().ref(this.props.dir)\r\n        .child(filename).getDownloadURL()\r\n        .then( url => {\r\n            console.log(url)\r\n            this.setState({\r\n                fileURL: url\r\n            })\r\n        })\r\n\r\n        this.props.filename(filename);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state){\r\n        if(props.defaultImg){\r\n            return state = {\r\n                name: props.defaultImgName,\r\n                fileURL: props.defaultImg\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    uploadAgain = () => {\r\n        //we can pass the filename and delete from the storage but we gonna reset state\r\n        this.setState({\r\n            name: '',\r\n            isUploading: false,\r\n            fileURL: ''\r\n        });\r\n        this.props.resetImage();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    !this.state.fileURL ?\r\n                        <div>\r\n                            <div className=\"label_inputs\">{this.props.tag}</div>\r\n                            <FileUploader\r\n                                accept=\"image/*\"\r\n                                name=\"image\"\r\n                                randomizeFilename\r\n                                storageRef={firebase.storage().ref(this.props.dir)}\r\n                                onUploadStart={ this.handleUploadStart }\r\n                                onUploadError={ this.handleUploadError }\r\n                                onUploadSuccess={ this.handleUploadSuccess }\r\n                            />\r\n                        </div>\r\n                    :null\r\n                }\r\n                {this.state.isUploading ?\r\n                    <div className=\"progress\"\r\n                        style={{textAlign: 'center',margin: '30px 0'}}\r\n                    >\r\n                        <CircularProgress \r\n                            style={{color: '#3da066'}}\r\n                            thickness= {7}\r\n                        />\r\n                    </div>\r\n                    :null\r\n                }\r\n\r\n                {this.state.fileURL ? \r\n                    <div className=\"image_upload_container\">\r\n                        <img\r\n                            style={{width: '100%'}}\r\n                            src={this.state.fileURL}\r\n                            alt={this.state.name}\r\n                        />\r\n                        <div className=\"remove\" onClick={() => this.uploadAgain()}>Remove</div>\r\n                    </div>\r\n                    :null\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fileuploader;"]},"metadata":{},"sourceType":"module"}