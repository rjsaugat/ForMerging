{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saugat\\\\Desktop\\\\React Dhulikhel\\\\design\\\\ForMerging\\\\src\\\\components\\\\ui\\\\misc.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nexport const Tag = props => {\n  //if we need to add additional properties to the style, we use ...props.add\n  const template = /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: props.bck,\n      fontSize: props.size,\n      color: props.color,\n      padding: '5px 10px',\n      display: 'inline-block',\n      fontFamily: 'Dancing Script',\n      ...props.add\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 22\n    }\n  }, props.children);\n\n  if (props.link) {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: props.linkTo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, template);\n  } else {\n    return template;\n  }\n}; //to make array of datas as frebase would not provide the array\n\nexport const firebaseLooper = snapshot => {\n  const data = [];\n  snapshot.forEach(childSnapshot => {\n    data.push({ ...childSnapshot.val(),\n      id: childSnapshot.key\n    });\n  });\n  return data;\n}; //since results appears as first one goes to the last and last one goes to the first\n\nexport const reverseArray = actualArray => {\n  let reversedArray = [];\n\n  for (let i = actualArray.length - 1; i >= 0; i--) {\n    reversedArray.push(actualArray[i]);\n  }\n\n  return reversedArray;\n};\nexport const validate = element => {\n  let error = [true, ''];\n\n  if (element.validation.email) {\n    const valid = /\\S+@\\S+\\.\\S+/.test(element.value);\n    const message = `${!valid ? 'Must be a valid email' : ''}`;\n    error = !valid ? [valid, message] : error;\n  }\n\n  if (element.validation.required) {\n    const valid = element.value.trim() !== \"\";\n    const message = `${!valid ? 'This field is required' : ''}`;\n    error = !valid ? [valid, message] : error;\n  }\n\n  return error;\n};","map":{"version":3,"sources":["C:/Users/saugat/Desktop/React Dhulikhel/design/ForMerging/src/components/ui/misc.js"],"names":["React","Link","Tag","props","template","background","bck","fontSize","size","color","padding","display","fontFamily","add","children","link","linkTo","firebaseLooper","snapshot","data","forEach","childSnapshot","push","val","id","key","reverseArray","actualArray","reversedArray","i","length","validate","element","error","validation","email","valid","test","value","message","required","trim"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,OAAO,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAC1B;AACA,QAAMC,QAAQ,gBAAG;AACb,IAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAEF,KAAK,CAACG,GADf;AAEHC,MAAAA,QAAQ,EAAEJ,KAAK,CAACK,IAFb;AAGHC,MAAAA,KAAK,EAAEN,KAAK,CAACM,KAHV;AAIHC,MAAAA,OAAO,EAAE,UAJN;AAKHC,MAAAA,OAAO,EAAE,cALN;AAMHC,MAAAA,UAAU,EAAE,gBANT;AAOH,SAAGT,KAAK,CAACU;AAPN,KADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUfV,KAAK,CAACW,QAVS,CAAjB;;AAYA,MAAIX,KAAK,CAACY,IAAV,EAAe;AACX,wBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEZ,KAAK,CAACa,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKZ,QADL,CADJ;AAKH,GAND,MAMK;AACD,WAAOA,QAAP;AACH;AACJ,CAvBM,C,CAyBP;;AACA,OAAO,MAAMa,cAAc,GAAIC,QAAD,IAAc;AACxC,QAAMC,IAAI,GAAG,EAAb;AACAD,EAAAA,QAAQ,CAACE,OAAT,CAAkBC,aAAD,IAAiB;AAC9BF,IAAAA,IAAI,CAACG,IAAL,CAAU,EACN,GAAGD,aAAa,CAACE,GAAd,EADG;AAENC,MAAAA,EAAE,EAAEH,aAAa,CAACI;AAFZ,KAAV;AAIH,GALD;AAMA,SAAON,IAAP;AACH,CATM,C,CAWP;;AACA,OAAO,MAAMO,YAAY,GAAGC,WAAD,IAAiB;AACxC,MAAIC,aAAa,GAAG,EAApB;;AACA,OAAI,IAAIC,CAAC,GAACF,WAAW,CAACG,MAAZ,GAAmB,CAA7B,EAA+BD,CAAC,IAAE,CAAlC,EAAoCA,CAAC,EAArC,EAAwC;AACpCD,IAAAA,aAAa,CAACN,IAAd,CAAmBK,WAAW,CAACE,CAAD,CAA9B;AACH;;AACD,SAAOD,aAAP;AACH,CANM;AAQP,OAAO,MAAMG,QAAQ,GAAIC,OAAD,IAAa;AACjC,MAAIC,KAAK,GAAG,CAAC,IAAD,EAAO,EAAP,CAAZ;;AAEA,MAAGD,OAAO,CAACE,UAAR,CAAmBC,KAAtB,EAA4B;AACxB,UAAMC,KAAK,GAAG,eAAeC,IAAf,CAAoBL,OAAO,CAACM,KAA5B,CAAd;AACA,UAAMC,OAAO,GAAI,GAAE,CAACH,KAAD,GAAS,uBAAT,GAAkC,EAAG,EAAxD;AACAH,IAAAA,KAAK,GAAE,CAACG,KAAD,GAAS,CAACA,KAAD,EAAQG,OAAR,CAAT,GAA4BN,KAAnC;AACH;;AAED,MAAGD,OAAO,CAACE,UAAR,CAAmBM,QAAtB,EAA+B;AAC3B,UAAMJ,KAAK,GAAGJ,OAAO,CAACM,KAAR,CAAcG,IAAd,OAAyB,EAAvC;AACA,UAAMF,OAAO,GAAI,GAAE,CAACH,KAAD,GAAS,wBAAT,GAAmC,EAAG,EAAzD;AACAH,IAAAA,KAAK,GAAE,CAACG,KAAD,GAAS,CAACA,KAAD,EAAQG,OAAR,CAAT,GAA4BN,KAAnC;AACH;;AAED,SAAOA,KAAP;AACH,CAhBM","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const Tag = (props) => {\r\n    //if we need to add additional properties to the style, we use ...props.add\r\n    const template = <div\r\n        style={{\r\n            background: props.bck,\r\n            fontSize: props.size,\r\n            color: props.color,\r\n            padding: '5px 10px',\r\n            display: 'inline-block',\r\n            fontFamily: 'Dancing Script',\r\n            ...props.add\r\n        }}\r\n    >{props.children}</div>\r\n\r\n    if (props.link){\r\n        return(\r\n            <Link to={props.linkTo}>\r\n                {template}\r\n            </Link>\r\n        )\r\n    }else{\r\n        return template\r\n    }\r\n}\r\n\r\n//to make array of datas as frebase would not provide the array\r\nexport const firebaseLooper = (snapshot) => {\r\n    const data = [];\r\n    snapshot.forEach((childSnapshot)=>{\r\n        data.push({\r\n            ...childSnapshot.val(),\r\n            id: childSnapshot.key\r\n        })\r\n    });\r\n    return data;\r\n} \r\n\r\n//since results appears as first one goes to the last and last one goes to the first\r\nexport const reverseArray =(actualArray) => {\r\n    let reversedArray = [];\r\n    for(let i=actualArray.length-1;i>=0;i--){\r\n        reversedArray.push(actualArray[i]);\r\n    }\r\n    return reversedArray;\r\n} \r\n\r\nexport const validate = (element) => {\r\n    let error = [true, ''];\r\n\r\n    if(element.validation.email){\r\n        const valid = /\\S+@\\S+\\.\\S+/.test(element.value);\r\n        const message = `${!valid ? 'Must be a valid email': ''}`;\r\n        error= !valid ? [valid, message] : error;\r\n    }\r\n\r\n    if(element.validation.required){\r\n        const valid = element.value.trim() !== \"\";\r\n        const message = `${!valid ? 'This field is required': ''}`;\r\n        error= !valid ? [valid, message] : error;\r\n    }\r\n\r\n    return error;\r\n}"]},"metadata":{},"sourceType":"module"}