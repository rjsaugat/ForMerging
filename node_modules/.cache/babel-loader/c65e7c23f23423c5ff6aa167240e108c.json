{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saugat\\\\Desktop\\\\React Dhulikhel\\\\design\\\\ForMerging\\\\src\\\\components\\\\admin\\\\tariffs\\\\index.js\";\nimport React, { Component } from 'react';\nimport FormField from '../../ui/formFields';\nimport { withRouter } from 'react-router-dom';\nimport AdminLayout from '../../../HOC/AdminLayout';\n\nclass AdminTariff extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tariffId: '',\n      formType: '',\n      formError: false,\n      formSuccess: '',\n      formdata: {\n        persons: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'persons_input',\n            type: 'text',\n            label: 'No of person',\n            className: 'form-control',\n            placeholder: 'eg. 2p X'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          validationMessage: '',\n          showlabel: true\n        },\n        ep: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'ep_input',\n            type: 'text',\n            label: 'Price for EP',\n            className: 'form-control',\n            placeholder: 'eg. Rs 4000'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          validationMessage: '',\n          showlabel: true\n        },\n        bb: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'bb_input',\n            type: 'text',\n            label: 'Price for B&B',\n            className: 'form-control',\n            placeholder: 'eg. Rs 4000'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          validationMessage: '',\n          showlabel: true\n        },\n        map: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'map_input',\n            type: 'text',\n            label: 'Price for MAP',\n            className: 'form-control',\n            placeholder: 'eg. Rs 4000'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          validationMessage: '',\n          showlabel: true\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    const tariffId = this.props.match.params.id;\n\n    if (tariffId) {\n      this.setState({\n        formType: 'Edit Tariff',\n        tariffId: tariffId\n      });\n    } else {\n      this.setState({\n        formType: 'Add Tariff'\n      });\n    }\n  }\n\n  submitForm() {\n    console.log('error no submit fuctionality');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AdminLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container tariff-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tariff-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this.submitForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: 'persons',\n      formData: this.state.formdata.persons,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'ep',\n      formData: this.state.formdata.ep,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'bb',\n      formData: this.state.formdata.bb,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'map',\n      formData: this.state.formdata.map,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"success_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }, this.state.formSuccess), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, \"Something is wrong\") : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 41\n      }\n    }, this.state.formType)))))));\n  }\n\n}\n\nexport default withRouter(AdminTariff);","map":{"version":3,"sources":["C:/Users/saugat/Desktop/React Dhulikhel/design/ForMerging/src/components/admin/tariffs/index.js"],"names":["React","Component","FormField","withRouter","AdminLayout","AdminTariff","state","tariffId","formType","formError","formSuccess","formdata","persons","element","value","config","name","type","label","className","placeholder","validation","required","valid","validationMessage","showlabel","ep","bb","map","componentDidMount","props","match","params","id","setState","submitForm","console","log","render","e","updateForm","event"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport FormField from '../../ui/formFields';\r\nimport {withRouter} from 'react-router-dom';\r\nimport AdminLayout from '../../../HOC/AdminLayout'\r\n\r\nclass AdminTariff extends Component {\r\n\r\n    state = {\r\n        tariffId : '',\r\n        formType: '',\r\n        formError: false,\r\n        formSuccess: '',\r\n        formdata: {\r\n            persons:{\r\n                element:'input',\r\n                value:'',\r\n                config:{\r\n                    name:'persons_input',\r\n                    type:'text',\r\n                    label: 'No of person',\r\n                    className: 'form-control',\r\n                    placeholder: 'eg. 2p X'\r\n                },\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                validationMessage:'',\r\n                showlabel: true\r\n            },\r\n            ep:{\r\n                element:'input',\r\n                value:'',\r\n                config:{\r\n                    name:'ep_input',\r\n                    type:'text',\r\n                    label: 'Price for EP',\r\n                    className: 'form-control',\r\n                    placeholder: 'eg. Rs 4000'\r\n                },\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                validationMessage:'',\r\n                showlabel: true\r\n            },\r\n            bb:{\r\n                element:'input',\r\n                value:'',\r\n                config:{\r\n                    name:'bb_input',\r\n                    type:'text',\r\n                    label: 'Price for B&B',\r\n                    className: 'form-control',\r\n                    placeholder: 'eg. Rs 4000'\r\n                },\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                validationMessage:'',\r\n                showlabel: true\r\n            },\r\n            map:{\r\n                element:'input',\r\n                value:'',\r\n                config:{\r\n                    name:'map_input',\r\n                    type:'text',\r\n                    label: 'Price for MAP',\r\n                    className: 'form-control',\r\n                    placeholder: 'eg. Rs 4000'\r\n                },\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                validationMessage:'',\r\n                showlabel: true\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const tariffId = this.props.match.params.id;\r\n        if(tariffId){\r\n            this.setState({\r\n                formType: 'Edit Tariff',\r\n                tariffId: tariffId\r\n            })\r\n        }else{\r\n            this.setState({\r\n                formType: 'Add Tariff'\r\n            })\r\n        }\r\n    }\r\n\r\n    submitForm(){\r\n        console.log('error no submit fuctionality')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AdminLayout>\r\n                <div className=\"container tariff-container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"tariff-form\">\r\n                            <form onSubmit={(e) => this.submitForm()}>\r\n                                    <FormField \r\n                                        id={'persons'}\r\n                                        formData = {this.state.formdata.persons}\r\n                                        change={(element)=>this.updateForm(element)}\r\n                                    />\r\n                                    <FormField \r\n                                        id={'ep'}\r\n                                        formData = {this.state.formdata.ep}\r\n                                        change={(element)=>this.updateForm(element)}\r\n                                    />\r\n                                    <FormField \r\n                                        id={'bb'}\r\n                                        formData = {this.state.formdata.bb}\r\n                                        change={(element)=>this.updateForm(element)}\r\n                                    />\r\n                                    <FormField \r\n                                        id={'map'}\r\n                                        formData = {this.state.formdata.map}\r\n                                        change={(element)=>this.updateForm(element)}\r\n                                    />\r\n\r\n                                    <div className=\"success_label\">{this.state.formSuccess}</div>\r\n                                    {this.state.formError ? \r\n                                    <div className=\"error_label\">\r\n                                        Something is wrong\r\n                                    </div>\r\n                                    :null}\r\n                                    <div className=\"admin_submit\">\r\n                                        <button className=\"btn btn-secondary\" onClick={(event)=>this.submitForm(event)}>\r\n                                            {this.state.formType}\r\n                                        </button>\r\n                                    </div>\r\n                            </form>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AdminTariff);"]},"metadata":{},"sourceType":"module"}