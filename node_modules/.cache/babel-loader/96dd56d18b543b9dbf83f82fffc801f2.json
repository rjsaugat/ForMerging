{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saugat\\\\Desktop\\\\React Dhulikhel\\\\design\\\\ForMerging\\\\src\\\\components\\\\admin\\\\gallery\\\\index.js\";\nimport React, { Component } from 'react';\nimport { firebaseGallery } from '../../../firebase';\nimport Fileuploader from '../../ui/fileUploader';\nimport AdminLayout from '../../../HOC/AdminLayout';\nimport { withRouter } from 'react-router-dom';\nimport { validate } from \"../../ui/misc\";\nimport FormField from '../../ui/formFields';\n\nclass AdminGallery extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: false,\n      formSuccess: '',\n      defaultImg: '',\n      formdata: {\n        image: {\n          element: 'image',\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: true\n        },\n        gallery_tag: {\n          element: 'select',\n          value: '',\n          config: {\n            name: 'select_input',\n            type: 'select',\n            label: 'Select which group image belongs to',\n            class: 'form-control',\n            options: [{\n              key: \"interior\",\n              value: \"interior\"\n            }, {\n              key: \"exterior\",\n              value: \"exterior\"\n            }, {\n              key: \"rooms\",\n              value: \"rooms\"\n            }, {\n              key: \"food\",\n              value: \"food & drinks\"\n            }]\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          validationMessage: '',\n          showlabel: true\n        }\n      }\n    };\n  }\n\n  updateForm(element, content = \"\") {\n    //not good to mutate the state so copy the state and work on this\n    const newFormData = { ...this.state.formdata\n    }; //get the email state\n\n    const newElement = { ...newFormData[element.id]\n    };\n\n    if (content === '') {\n      newElement.value = element.event.target.value;\n    } else {\n      newElement.value = content;\n    }\n\n    let validData = validate(newElement);\n    newElement.valid = validData[0];\n    newElement.validationMessage = validData[1];\n    newFormData[element.id] = newElement;\n    console.log(newFormData);\n    this.setState({\n      formError: false,\n      formdata: newFormData\n    }); //console.log(this.state.formdata.email.value)\n  }\n\n  resetImage() {\n    const newFormData = { ...this.state.formdata\n    };\n    newFormData['image'].value = '';\n    newFormData['image'].valid = false;\n    this.setState({\n      defaultImg: '',\n      formdata: newFormData\n    });\n  }\n\n  submitForm(event) {\n    event.preventDefault();\n    let dataToSubmit = {};\n    let formIsValid = true;\n\n    for (let key in this.state.formdata) {\n      dataToSubmit[key] = this.state.formdata[key].value; //as formisValid is changing for each element\n\n      formIsValid = this.state.formdata[key].valid && formIsValid;\n    }\n\n    if (formIsValid) {\n      firebaseGallery.push(dataToSubmit).then(() => {\n        this.props.history.push('/admin_gallery');\n      }).catch(error => {\n        console.log('Error occured', error);\n        this.setState({\n          formError: true\n        });\n      });\n    } else {\n      this.setState({\n        formError: true\n      });\n    }\n  }\n\n  storeFilename(filename) {\n    this.updateForm({\n      id: 'image'\n    }, filename);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AdminLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Add images to gallery\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Fileuploader, {\n      dir: \"/gallery\",\n      tag: \"Add Gallery Image\",\n      defaultImg: this.state.defaultImg,\n      defaultImgName: this.state.formdata.image.value,\n      resetImage: () => this.resetImage(),\n      filename: filename => this.storeFilename(filename),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'gallery_tag',\n      formData: this.state.formdata.gallery_tag,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"success_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, this.state.formSuccess), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, \"Something is wrong\") : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 37\n      }\n    }, \"Add Image\"))))));\n  }\n\n}\n\nexport default withRouter(AdminGallery);","map":{"version":3,"sources":["C:/Users/saugat/Desktop/React Dhulikhel/design/ForMerging/src/components/admin/gallery/index.js"],"names":["React","Component","firebaseGallery","Fileuploader","AdminLayout","withRouter","validate","FormField","AdminGallery","state","formError","formSuccess","defaultImg","formdata","image","element","value","validation","required","valid","gallery_tag","config","name","type","label","class","options","key","validationMessage","showlabel","updateForm","content","newFormData","newElement","id","event","target","validData","console","log","setState","resetImage","submitForm","preventDefault","dataToSubmit","formIsValid","push","then","props","history","catch","error","storeFilename","filename","render","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { firebaseGallery } from '../../../firebase';\r\nimport Fileuploader from '../../ui/fileUploader';\r\nimport AdminLayout from '../../../HOC/AdminLayout';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { validate } from \"../../ui/misc\";\r\nimport FormField from '../../ui/formFields';\r\n\r\nclass AdminGallery extends Component {\r\n\r\n    state = {\r\n        formError: false,\r\n        formSuccess: '',\r\n        defaultImg:'',\r\n        formdata: {\r\n            image:{\r\n                element: 'image',\r\n                value: '',\r\n                validation:{\r\n                    required: true,\r\n                },\r\n                valid: true\r\n            },\r\n            gallery_tag:{\r\n                element:'select',\r\n                value:'',\r\n                config:{\r\n                    name:'select_input',\r\n                    type:'select',\r\n                    label: 'Select which group image belongs to',\r\n                    class: 'form-control',\r\n                    options: [\r\n                        {key:\"interior\", value:\"interior\"},\r\n                        {key:\"exterior\", value:\"exterior\"},\r\n                        {key:\"rooms\", value:\"rooms\"},\r\n                        {key:\"food\", value:\"food & drinks\"}\r\n                    ]\r\n                },\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                validationMessage:'',\r\n                showlabel: true\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm(element, content=\"\"){\r\n        //not good to mutate the state so copy the state and work on this\r\n        const newFormData = { ...this.state.formdata};\r\n        //get the email state\r\n        const newElement = {...newFormData[element.id]}\r\n    \r\n        if(content === ''){\r\n            newElement.value = element.event.target.value;\r\n        }else{\r\n            newElement.value = content;\r\n        }\r\n        \r\n\r\n        let validData = validate(newElement)\r\n        \r\n        newElement.valid = validData[0];\r\n        newElement.validationMessage = validData[1]\r\n\r\n        newFormData[element.id] = newElement;\r\n        console.log(newFormData)\r\n        \r\n        \r\n        this.setState({\r\n            formError: false,\r\n            formdata: newFormData\r\n        })\r\n        //console.log(this.state.formdata.email.value)\r\n    }\r\n\r\n    resetImage(){\r\n        const newFormData = {...this.state.formdata}\r\n        newFormData['image'].value = '';\r\n        newFormData['image'].valid = false;\r\n\r\n        this.setState({\r\n            defaultImg: '',\r\n            formdata: newFormData\r\n        })\r\n\r\n    }\r\n\r\n    submitForm(event){\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let formIsValid = true;\r\n\r\n        for(let key in this.state.formdata){\r\n            dataToSubmit[key] = this.state.formdata[key].value;\r\n            //as formisValid is changing for each element\r\n            formIsValid = this.state.formdata[key].valid && formIsValid;\r\n        }\r\n\r\n        \r\n\r\n        if(formIsValid){\r\n            firebaseGallery.push(dataToSubmit).then(()=>{\r\n                this.props.history.push('/admin_gallery')\r\n            }).catch((error)=>{\r\n                console.log('Error occured', error);\r\n                this.setState({formError: true})\r\n            })\r\n        }else{\r\n            this.setState({\r\n                formError: true\r\n            })\r\n        }\r\n    }\r\n\r\n    storeFilename(filename){\r\n        this.updateForm({id:'image'}, filename)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AdminLayout>\r\n                <h2 style={{textAlign: 'center'}} >Add images to gallery</h2>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <form onSubmit={(event) => this.submitForm(event)}>\r\n                            {/* upload to /gallery, if we dont specify directory the file will be uploaded to root of storage in firebase \r\n\r\n                            */}\r\n                            <Fileuploader\r\n                                dir=\"/gallery\"\r\n                                tag={\"Add Gallery Image\"}\r\n                                defaultImg={this.state.defaultImg}\r\n                                defaultImgName={this.state.formdata.image.value}\r\n                                resetImage = {() => this.resetImage()}\r\n                                filename={(filename) => this.storeFilename(filename)}\r\n                            />\r\n\r\n                            <FormField \r\n                                id={'gallery_tag'}\r\n                                formData = {this.state.formdata.gallery_tag}\r\n                                change={(element)=>this.updateForm(element)}\r\n                            /> \r\n\r\n                        <div className=\"success_label\">{this.state.formSuccess}</div>\r\n                                {this.state.formError ? \r\n                                <div className=\"error_label\">\r\n                                    Something is wrong\r\n                                </div>\r\n                                :null}\r\n                                <div className=\"admin_submit\">\r\n                                    <button onClick={(event)=>this.submitForm(event)}>\r\n                                        Add Image\r\n                                    </button>\r\n                                </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AdminGallery);"]},"metadata":{},"sourceType":"module"}