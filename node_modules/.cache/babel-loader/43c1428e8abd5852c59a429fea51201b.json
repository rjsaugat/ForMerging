{"ast":null,"code":"var _jsxFileName = \"D:\\\\2077\\\\ForMerging-master\\\\ForMerging\\\\src\\\\components\\\\admin\\\\services\\\\addEditServices.js\";\nimport React, { Component } from 'react';\nimport AdminLayout from '../../../HOC/AdminLayout';\nimport FormField from \"../../ui/formFields\";\nimport { validate } from '../../ui/misc';\nimport { withRouter } from 'react-router-dom';\nimport { firebaseServices, firebaseDB } from '../../../firebase';\nimport Fileuploader from '../../ui/fileUploader';\n\nclass AddEditServices extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      serviceId: '',\n      formType: '',\n      formError: false,\n      formSuccess: '',\n      defaultImg: '',\n      formdata: {\n        name: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'name_input',\n            type: 'text',\n            label: 'Name of Service',\n            class: 'form-control'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          validationMessage: '',\n          showlabel: true\n        },\n        description: {\n          element: 'textarea',\n          value: '',\n          config: {\n            name: 'name_input',\n            type: 'textarea',\n            label: 'Description of Service',\n            class: 'form-control'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          validationMessage: '',\n          showlabel: true\n        },\n        image: {\n          element: 'image',\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: true\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    const serviceId = this.props.match.params.id;\n\n    if (!serviceId) {\n      this.setState({\n        formType: 'Add Service'\n      });\n    } else {}\n  }\n\n  resetImage() {\n    const newFormData = { ...this.state.formdata\n    };\n    newFormData['image'].value = '';\n    newFormData['image'].valid = false;\n    this.setState({\n      defaultImg: '',\n      formdata: newFormData\n    });\n  }\n\n  storeFilename(filename) {\n    this.updateForm({\n      id: 'image'\n    }, filename);\n  }\n\n  updateForm(element, content = \"\") {\n    //not good to mutate the state so copy the state and work on this\n    const newFormData = { ...this.state.formdata\n    }; //get the email state\n\n    const newElement = { ...newFormData[element.id]\n    };\n\n    if (content === '') {\n      newElement.value = element.event.target.value;\n    } else {\n      newElement.value = content;\n    }\n\n    let validData = validate(newElement);\n    newElement.valid = validData[0];\n    newElement.validationMessage = validData[1];\n    newFormData[element.id] = newElement;\n    console.log(newFormData);\n    this.setState({\n      formError: false,\n      formdata: newFormData\n    }); //console.log(this.state.formdata.email.value)\n  }\n\n  submitForm(event) {\n    event.preventDefault();\n    let dataToSubmit = {};\n    let formIsValid = true;\n\n    for (let key in this.state.formdata) {\n      dataToSubmit[key] = this.state.formdata[key].value; //as formisValid is changing for each element\n\n      formIsValid = this.state.formdata[key].valid && formIsValid;\n    }\n\n    if (formIsValid) {\n      if (this.state.formType === 'Edit Service') {\n        firebaseDB.ref(`services/${this.state.serviceId}`).update(dataToSubmit).then(() => {\n          this.successForm('Updated Successfully');\n        }).catch(e => {\n          this.setState({\n            formError: true\n          });\n          console.log('erroe', e);\n        });\n      } else {\n        firebaseServices.push(dataToSubmit).then(() => {\n          this.props.history.push('/admin_services');\n        }).catch(error => {\n          console.log('Error occured', error);\n          this.setState({\n            formError: true\n          });\n        });\n      }\n    } else {\n      this.setState({\n        formError: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AdminLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row admin_services\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, this.state.formType), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add_service_form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Fileuploader, {\n      dir: \"services\",\n      tag: \"Services image\",\n      defaultImg: this.state.defaultImg,\n      defaultImgName: this.state.formdata.image.value,\n      resetImage: () => this.resetImage(),\n      filename: filename => this.storeFilename(filename),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'name',\n      formData: this.state.formdata.name,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'description',\n      formData: this.state.formdata.description,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"success_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, this.state.formSuccess), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, \"Something is wrong\") : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 37\n      }\n    }, this.state.formType)))))));\n  }\n\n}\n\nexport default withRouter(AddEditServices);","map":{"version":3,"sources":["D:/2077/ForMerging-master/ForMerging/src/components/admin/services/addEditServices.js"],"names":["React","Component","AdminLayout","FormField","validate","withRouter","firebaseServices","firebaseDB","Fileuploader","AddEditServices","state","serviceId","formType","formError","formSuccess","defaultImg","formdata","name","element","value","config","type","label","class","validation","required","valid","validationMessage","showlabel","description","image","componentDidMount","props","match","params","id","setState","resetImage","newFormData","storeFilename","filename","updateForm","content","newElement","event","target","validData","console","log","submitForm","preventDefault","dataToSubmit","formIsValid","key","ref","update","then","successForm","catch","e","push","history","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AdminLayout from '../../../HOC/AdminLayout';\r\n\r\nimport FormField from \"../../ui/formFields\";\r\nimport {validate} from '../../ui/misc';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport {firebaseServices, firebaseDB } from '../../../firebase';\r\nimport Fileuploader from '../../ui/fileUploader';\r\n\r\nclass AddEditServices extends Component {\r\n\r\n    state = {\r\n        serviceId : '',\r\n        formType: '',\r\n        formError: false,\r\n        formSuccess: '',\r\n        defaultImg: '',\r\n        formdata: {\r\n            name:{\r\n                element:'input',\r\n                value:'',\r\n                config:{\r\n                    name:'name_input',\r\n                    type:'text',\r\n                    label: 'Name of Service',\r\n                    class: 'form-control'\r\n                },\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                validationMessage:'',\r\n                showlabel: true\r\n            },\r\n            description:{\r\n                element:'textarea',\r\n                value:'',\r\n                config:{\r\n                    name:'name_input',\r\n                    type:'textarea',\r\n                    label: 'Description of Service',\r\n                    class: 'form-control'\r\n                },\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                validationMessage:'',\r\n                showlabel: true\r\n            },\r\n            image: {\r\n                element: 'image',\r\n                value: '',\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid:true\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const serviceId = this.props.match.params.id;\r\n        if(!serviceId){\r\n            this.setState({\r\n                formType : 'Add Service'\r\n            })\r\n        }else{\r\n\r\n        }\r\n    }\r\n\r\n    resetImage(){\r\n        const newFormData = {...this.state.formdata}\r\n        newFormData['image'].value = '';\r\n        newFormData['image'].valid = false;\r\n        this.setState({\r\n            defaultImg: '',\r\n            formdata: newFormData\r\n        })\r\n    }\r\n\r\n    storeFilename(filename){\r\n        this.updateForm({id:'image'}, filename)\r\n    }\r\n\r\n    updateForm(element, content=\"\"){\r\n        //not good to mutate the state so copy the state and work on this\r\n        const newFormData = { ...this.state.formdata};\r\n        //get the email state\r\n        const newElement = {...newFormData[element.id]}\r\n    \r\n        if(content === ''){\r\n            newElement.value = element.event.target.value;\r\n        }else{\r\n            newElement.value = content;\r\n        }\r\n        \r\n\r\n        let validData = validate(newElement)\r\n        \r\n        newElement.valid = validData[0];\r\n        newElement.validationMessage = validData[1]\r\n\r\n        newFormData[element.id] = newElement;\r\n        console.log(newFormData)\r\n        \r\n        \r\n        this.setState({\r\n            formError: false,\r\n            formdata: newFormData\r\n        })\r\n        //console.log(this.state.formdata.email.value)\r\n    }\r\n\r\n    submitForm(event){\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let formIsValid = true;\r\n\r\n        for(let key in this.state.formdata){\r\n            dataToSubmit[key] = this.state.formdata[key].value;\r\n            //as formisValid is changing for each element\r\n            formIsValid = this.state.formdata[key].valid && formIsValid;\r\n        }\r\n\r\n        if(formIsValid){\r\n            if(this.state.formType === 'Edit Service'){\r\n                firebaseDB.ref(`services/${this.state.serviceId}`)\r\n                .update(dataToSubmit).then(()=>{\r\n                    this.successForm('Updated Successfully')\r\n                }).catch((e)=>{\r\n                    this.setState({formError: true})\r\n                    console.log('erroe', e)\r\n                })\r\n            }else{\r\n                firebaseServices.push(dataToSubmit).then(()=>{\r\n                    this.props.history.push('/admin_services')\r\n                }).catch((error)=>{\r\n                    console.log('Error occured', error);\r\n                    this.setState({formError: true})\r\n                })\r\n            }\r\n        }else{\r\n            this.setState({\r\n                formError: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AdminLayout>\r\n                <div className=\"container\">\r\n                    <div className=\"row admin_services\">\r\n                        <h2>\r\n                            {this.state.formType}\r\n                        </h2>\r\n                        <div className=\"add_service_form\">\r\n                            <form onSubmit={(event) => this.submitForm(event)}>\r\n\r\n                            <Fileuploader \r\n                                dir=\"services\"\r\n                                tag={\"Services image\"}\r\n                                defaultImg={this.state.defaultImg}\r\n                                defaultImgName = {this.state.formdata.image.value}\r\n                                resetImage = {() => this.resetImage()}\r\n                                filename={(filename) => this.storeFilename(filename)}\r\n                            />\r\n\r\n                            <FormField \r\n                                id={'name'}\r\n                                formData = {this.state.formdata.name}\r\n                                change={(element)=>this.updateForm(element)}\r\n                            />\r\n\r\n                            <FormField \r\n                                id={'description'}\r\n                                formData = {this.state.formdata.description}\r\n                                change={(element)=>this.updateForm(element)}\r\n                            />\r\n\r\n                            <div className=\"success_label\">{this.state.formSuccess}</div>\r\n                                {this.state.formError ? \r\n                                <div className=\"error_label\">\r\n                                    Something is wrong\r\n                                </div>\r\n                                :null}\r\n                                <div className=\"admin_submit\">\r\n                                    <button className=\"btn btn-secondary\" onClick={(event)=>this.submitForm(event)}>\r\n                                        {this.state.formType}\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AddEditServices);"]},"metadata":{},"sourceType":"module"}