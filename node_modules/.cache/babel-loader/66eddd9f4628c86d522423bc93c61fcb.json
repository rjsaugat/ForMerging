{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saugat\\\\Desktop\\\\React Dhulikhel\\\\design\\\\ForMerging\\\\src\\\\components\\\\signin\\\\index.js\";\nimport React, { Component } from 'react';\nimport FormField from '../ui/formFields';\nimport { validate } from '../ui/misc';\nimport { firebase } from '../../firebase';\n\nclass Sign_In extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: false,\n      formSuccess: '',\n      formdata: {\n        email: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'email_input',\n            type: 'email',\n            placeholder: 'Enter your email',\n            class: \"form-control\"\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: false,\n          validationMessage: ''\n        },\n        password: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'password_input',\n            type: 'password',\n            placeholder: 'Enter your password',\n            class: \"form-control\"\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          validationMessage: ''\n        }\n      }\n    };\n  }\n\n  updateForm(element) {\n    //not good to mutate the state so copy the state and work on this\n    const newFormData = { ...this.state.formdata\n    }; //get the email state\n\n    const newElement = { ...newFormData[element.id]\n    };\n    newElement.value = element.event.target.value;\n    let validData = validate(newElement);\n    newElement.valid = validData[0];\n    newElement.validationMessage = validData[1];\n    newFormData[element.id] = newElement;\n    console.log(newFormData);\n    this.setState({\n      formError: false,\n      formdata: newFormData\n    }); //console.log(this.state.formdata.email.value)\n  }\n\n  submitForm(event) {\n    event.preventDefault();\n    let dataToSubmit = {};\n    let formIsValid = true;\n\n    for (let key in this.state.formdata) {\n      dataToSubmit[key] = this.state.formdata[key].value;\n      formIsValid = this.state.formdata[key].valid && formIsValid;\n    }\n\n    if (formIsValid) {\n      console.log(dataToSubmit); //to check whether the entered email is already on database\n\n      firebase.auth().signInWithEmailAndPassword(dataToSubmit.email, dataToSubmit.password).then(() => {\n        //pushing users to different route through react router\n        this.props.history.push('/dashboard');\n      }).catch(e => {\n        this.setState({\n          formError: true\n        });\n      }); //this.resetFormSuccess()\n    } else {\n      this.setState({\n        formError: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, \"Please log in\"), /*#__PURE__*/React.createElement(FormField, {\n      id: 'email',\n      formData: this.state.formdata.email,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'password',\n      formData: this.state.formdata.password,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }\n    }, \"Something's wrong. Try Again!\") : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"success_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, this.state.formSuccess), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"sign_in_button btn btn-primary\",\n      onClick: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, \"Sign In\"))));\n  }\n\n}\n\nexport default Sign_In;","map":{"version":3,"sources":["C:/Users/saugat/Desktop/React Dhulikhel/design/ForMerging/src/components/signin/index.js"],"names":["React","Component","FormField","validate","firebase","Sign_In","state","formError","formSuccess","formdata","email","element","value","config","name","type","placeholder","class","validation","required","valid","validationMessage","password","updateForm","newFormData","newElement","id","event","target","validData","console","log","setState","submitForm","preventDefault","dataToSubmit","formIsValid","key","auth","signInWithEmailAndPassword","then","props","history","push","catch","e","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport FormField from '../ui/formFields';\r\n\r\nimport {validate} from '../ui/misc';\r\nimport { firebase } from '../../firebase';\r\n\r\nclass Sign_In extends Component {\r\n\r\n    state = {\r\n        formError: false,\r\n        formSuccess: '',\r\n        formdata: {\r\n            email:{\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    name: 'email_input',\r\n                    type: 'email',\r\n                    placeholder: 'Enter your email',\r\n                    class: \"form-control\"\r\n                },\r\n                validation:{\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                valid: false,\r\n                validationMessage: ''\r\n            },\r\n            password:{\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    name: 'password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Enter your password',\r\n                    class: \"form-control\"\r\n                },\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                validationMessage: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm(element){\r\n        //not good to mutate the state so copy the state and work on this\r\n        const newFormData = { ...this.state.formdata};\r\n        //get the email state\r\n        const newElement = {...newFormData[element.id]}\r\n    \r\n        newElement.value = element.event.target.value;\r\n\r\n        let validData = validate(newElement)\r\n        \r\n        newElement.valid = validData[0];\r\n        newElement.validationMessage = validData[1]\r\n\r\n        newFormData[element.id] = newElement;\r\n        console.log(newFormData)\r\n        \r\n        \r\n        this.setState({\r\n            formError: false,\r\n            formdata: newFormData\r\n        })\r\n        //console.log(this.state.formdata.email.value)\r\n    }\r\n    \r\n    submitForm(event){\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let formIsValid = true;\r\n\r\n        for(let key in this.state.formdata){\r\n            dataToSubmit[key] = this.state.formdata[key].value;\r\n            formIsValid = this.state.formdata[key].valid && formIsValid;\r\n        }\r\n\r\n        if(formIsValid){\r\n            console.log(dataToSubmit);\r\n            //to check whether the entered email is already on database\r\n            firebase.auth()\r\n            .signInWithEmailAndPassword(\r\n                dataToSubmit.email,\r\n                dataToSubmit.password\r\n            ).then(()=>{\r\n                //pushing users to different route through react router\r\n                this.props.history.push('/dashboard');\r\n            }).catch((e)=>{\r\n                this.setState({\r\n                    formError: true\r\n                })\r\n            })\r\n            //this.resetFormSuccess()\r\n        }else{\r\n            this.setState({\r\n                formError: true\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"signin_wrapper\">\r\n                    <form onSubmit={(event) => this.submitForm(event)}>\r\n                        <h2>Please log in</h2>\r\n\r\n                            <FormField\r\n                                id={'email'}\r\n                                formData = {this.state.formdata.email}\r\n                                change = {(element)=>this.updateForm(element)}\r\n                            />\r\n\r\n                            <FormField\r\n                                id={'password'}\r\n                                formData = {this.state.formdata.password}\r\n                                change = {(element)=>this.updateForm(element)}\r\n                            />\r\n\r\n                            {this.state.formError ?\r\n                                    <div className=\"error_label\">Something's wrong. Try Again!</div>\r\n                                :null\r\n                            }\r\n                            <div className=\"success_label\">{this.state.formSuccess}</div>\r\n                            <button className=\"sign_in_button btn btn-primary\" onClick={(event) => this.submitForm(event)}>Sign In</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sign_In;"]},"metadata":{},"sourceType":"module"}