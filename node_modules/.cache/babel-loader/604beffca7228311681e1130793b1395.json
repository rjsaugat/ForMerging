{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saugat\\\\Desktop\\\\React Dhulikhel\\\\design\\\\ForMerging\\\\src\\\\components\\\\ui\\\\formFields.js\";\nimport React from 'react';\n\nconst FormField = ({\n  id,\n  formData,\n  change\n}) => {\n  const showError = () => {\n    let errorMessage = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 28\n      }\n    }, formData.validation && !formData.valid ? formData.validationMessage : null);\n    return errorMessage;\n  };\n\n  const renderTemplate = () => {\n    let formTemplate = null;\n\n    switch (formData.element) {\n      case 'input':\n        formTemplate = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }\n        }, formData.showlabel ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"label_inputs\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }\n        }, formData.config.label) : null, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, formData.config, {\n          value: formData.value,\n          onChange: event => change({\n            event,\n            id\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }\n        })), showError());\n        break;\n\n      case 'textarea':\n        formTemplate = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }\n        }, formData.showlabel ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"label_inputs\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }\n        }, formData.config.label) : null, /*#__PURE__*/React.createElement(\"textarea\", Object.assign({}, formData.config, {\n          value: formData.value,\n          onChange: event => change({\n            event,\n            id\n          }),\n          rows: \"5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }\n        })), showError());\n        break;\n\n      case 'select':\n        formTemplate = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }\n        }, formData.showlabel ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"label_inputs\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }\n        }, formData.config.label) : null, /*#__PURE__*/React.createElement(\"select\", {\n          value: formData.value,\n          onChange: event => change({\n            event,\n            id\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }\n        }, \"Select One:\"), formData.config.options.map(item => /*#__PURE__*/React.createElement(\"option\", {\n          key: item.key,\n          value: item.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 37\n          }\n        }, item.value))), showError());\n        break;\n\n      default:\n        formTemplate = null;\n    }\n\n    return formTemplate;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, renderTemplate());\n};\n\nexport default FormField;","map":{"version":3,"sources":["C:/Users/saugat/Desktop/React Dhulikhel/design/ForMerging/src/components/ui/formFields.js"],"names":["React","FormField","id","formData","change","showError","errorMessage","validation","valid","validationMessage","renderTemplate","formTemplate","element","showlabel","config","label","value","event","options","map","item","key"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nconst FormField = ({id, formData, change}) => {\r\n\r\n    const showError = () => {\r\n        let errorMessage = <div className=\"error_label\">\r\n            {\r\n                formData.validation && !formData.valid ? \r\n                    formData.validationMessage\r\n                :null\r\n            }\r\n        </div>\r\n        return errorMessage;\r\n    }\r\n\r\n    const renderTemplate = () => {\r\n        let formTemplate = null;\r\n\r\n        switch(formData.element){\r\n            case('input'):\r\n                formTemplate = (\r\n                    <div>\r\n                        {formData.showlabel ?\r\n                            <div className=\"label_inputs\">{formData.config.label}</div>\r\n                            :null\r\n                        }\r\n                        <input \r\n                            {...formData.config}\r\n                            value={formData.value}\r\n                            onChange={(event) => change({event, id})}\r\n                        />\r\n                        {showError()}\r\n                    </div>\r\n                )\r\n            break;\r\n            case('textarea'):\r\n                formTemplate = (\r\n                    <div>\r\n                        {formData.showlabel ?\r\n                            <div className=\"label_inputs\">{formData.config.label}</div>\r\n                            :null\r\n                        }\r\n                        <textarea \r\n                            {...formData.config}\r\n                            value={formData.value}\r\n                            onChange={(event) => change({event, id})}\r\n                            rows=\"5\"\r\n                        />\r\n                        {showError()}\r\n                    </div>\r\n                )\r\n            break;\r\n            case('select'):\r\n                formTemplate = (\r\n                    <div>\r\n                        {formData.showlabel ?\r\n                            <div className=\"label_inputs\">{formData.config.label}</div>\r\n                            :null\r\n                        }\r\n                        <select \r\n                            value={formData.value}\r\n                            onChange={(event) => change({event,id})}\r\n                        >\r\n                            <option value=\"\">Select One:</option>\r\n                            {\r\n                                formData.config.options.map((item)=>(\r\n                                    <option key={item.key} value={item.key}>\r\n                                        {item.value}\r\n                                    </option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n                        {showError()}\r\n                    </div>\r\n                )\r\n            break;\r\n            default:\r\n                formTemplate = null;\r\n        }\r\n        return formTemplate;\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {renderTemplate()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormField;"]},"metadata":{},"sourceType":"module"}