{"ast":null,"code":"var _jsxFileName = \"D:\\\\2077\\\\ForMerging-master\\\\ForMerging\\\\src\\\\components\\\\admin\\\\rooms\\\\index.js\";\nimport React, { Component } from 'react';\nimport AdminLayout from '../../../HOC/AdminLayout';\nimport { Link } from 'react-router-dom';\nimport { firebase, firebaseDB, firebaseRooms } from '../../../firebase';\nimport { firebaseLooper, reverseArray } from '../../ui/misc';\n\nclass AdminRooms extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      rooms: []\n    };\n\n    this.findImageOnObject = () => {\n      let count = 0;\n      const findImage = setInterval(() => {\n        if (this.state.rooms.length && this.state.rooms[0].image) {\n          console.log('found');\n          clearInterval(findImage);\n          this.getImageUrl();\n        } else {\n          count++;\n        }\n\n        if (count > 10) clearInterval(findImage);\n      }, 1000);\n    };\n\n    this.getImageUrl = () => {\n      const newRooms = { ...this.state.rooms\n      };\n\n      for (let room in newRooms) {\n        firebaseDB.ref(`rooms/${room.id}`).once('value').then(snapshot => {\n          const roomData = snapshot.val();\n          firebase.storage().ref('/rooms').child(roomData.image).getDownloadURL().then(url => {\n            newRooms['url'] = url;\n          });\n        });\n      }\n\n      console.log(newRooms);\n      this.setState({\n        rooms: newRooms\n      });\n    };\n  }\n\n  componentDidMount() {\n    firebaseRooms.once('value').then(snapshot => {\n      const rooms = firebaseLooper(snapshot);\n      this.setState({\n        isLoading: false,\n        rooms: reverseArray(rooms)\n      });\n    }).catch(error => {\n      console.log('firebase rooms error', error);\n    });\n    /* this.findImageOnObject() */\n  }\n\n  addRooms(room, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mb-4 box-shadow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"card-img-top\",\n      src: room.url,\n      alt: room.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, room.description), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `admin_rooms/add_rooms/${room.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-sm btn-outline-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }\n    }, \"View\")), /*#__PURE__*/React.createElement(Link, {\n      to: `admin_rooms/add_rooms/${room.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-sm btn-outline-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }\n    }, \"Edit\"))), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, room.name)))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AdminLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"album py-5 bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, this.state.rooms ? this.state.rooms.map((room, i) =>\n    /* firebaseDB.ref(`rooms/${room.id}`).once('value').then((snapshot) => {\r\n        const roomData = snapshot.val();\r\n            firebase.storage().ref('/rooms')\r\n            .child(roomData.image).getDownloadURL()\r\n            .then( url => {\r\n                this.addRooms(room, i, url)\r\n        })\r\n    })\r\n     */\n    this.addRooms(room, i)) : null))));\n  }\n\n}\n\nexport default AdminRooms;","map":{"version":3,"sources":["D:/2077/ForMerging-master/ForMerging/src/components/admin/rooms/index.js"],"names":["React","Component","AdminLayout","Link","firebase","firebaseDB","firebaseRooms","firebaseLooper","reverseArray","AdminRooms","state","isLoading","rooms","findImageOnObject","count","findImage","setInterval","length","image","console","log","clearInterval","getImageUrl","newRooms","room","ref","id","once","then","snapshot","roomData","val","storage","child","getDownloadURL","url","setState","componentDidMount","catch","error","addRooms","i","name","description","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AdminLayout from '../../../HOC/AdminLayout';\r\nimport { Link } from 'react-router-dom';\r\nimport { firebase, firebaseDB, firebaseRooms } from '../../../firebase';\r\nimport {firebaseLooper, reverseArray} from '../../ui/misc';\r\n\r\n\r\nclass AdminRooms extends Component {\r\n\r\n    state= {\r\n        isLoading: true,\r\n        rooms: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        firebaseRooms.once('value').then((snapshot) => {\r\n            const rooms = firebaseLooper(snapshot);\r\n            this.setState({\r\n                isLoading: false,\r\n                rooms: reverseArray(rooms)\r\n            })\r\n        }).catch((error) => {\r\n            console.log('firebase rooms error', error);\r\n        })\r\n        /* this.findImageOnObject() */\r\n    }\r\n\r\n    findImageOnObject = () =>{\r\n        let count = 0;\r\n        const findImage = setInterval(() => {\r\n            if(this.state.rooms.length && this.state.rooms[0].image){\r\n                console.log('found')\r\n                clearInterval(findImage);\r\n                this.getImageUrl()\r\n            }else{\r\n                count++\r\n            }\r\n            if(count > 10) clearInterval(findImage)\r\n        }, 1000);\r\n    }\r\n\r\n    getImageUrl = () => {\r\n        \r\n        const newRooms = {...this.state.rooms}\r\n        for(let room in newRooms){\r\n            \r\n            firebaseDB.ref(`rooms/${room.id}`).once('value').then((snapshot)=>{\r\n                const roomData = snapshot.val();\r\n                firebase.storage().ref('/rooms')\r\n                .child(roomData.image).getDownloadURL()\r\n                .then( url => {\r\n                    newRooms['url'] = url\r\n                }) \r\n            })\r\n            \r\n        }\r\n        console.log(newRooms)\r\n        this.setState({\r\n            rooms: newRooms\r\n        })\r\n    }\r\n\r\n    addRooms(room, i){\r\n        \r\n        return(\r\n            <div className=\"col-md-4\" key={i}>\r\n                <div className=\"card mb-4 box-shadow\">\r\n                    <img className=\"card-img-top\" src={room.url} alt={room.name}/>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\">{room.description}</p>\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <div className=\"btn-group\">\r\n                                <Link to={`admin_rooms/add_rooms/${room.id}`}>\r\n                                    <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button>\r\n                                </Link>\r\n                                <Link to={`admin_rooms/add_rooms/${room.id}`}>\r\n                                    <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n                                </Link>\r\n                                \r\n                            </div>\r\n                            <small className=\"text-muted\">{room.name}</small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <AdminLayout>\r\n                <div className=\"album py-5 bg-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            \r\n                            {this.state.rooms ?\r\n                                this.state.rooms.map((room, i)=>(\r\n                                    /* firebaseDB.ref(`rooms/${room.id}`).once('value').then((snapshot) => {\r\n                                        const roomData = snapshot.val();\r\n                                            firebase.storage().ref('/rooms')\r\n                                            .child(roomData.image).getDownloadURL()\r\n                                            .then( url => {\r\n                                                this.addRooms(room, i, url)\r\n                                        })\r\n                                    })\r\n                                     */\r\n                                    this.addRooms(room, i)\r\n                                ))\r\n                                :null\r\n                            }\r\n                        </div>\r\n                    </div>    \r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminRooms;"]},"metadata":{},"sourceType":"module"}